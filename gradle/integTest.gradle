// integration testing
sourceSets {
    integTest {
        groovy.srcDir file('src/integTest/groovy')
        resources.srcDir file('src/integTest/resources')

        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

configurations {
    integTestCompile.extendsFrom testCompile
    integTestRuntime.extendsFrom testRuntime
}

dependencies {
    integTestCompile gradleTestKit()
    integTestCompile('org.spockframework:spock-core:1.3-groovy-2.5') {
        exclude module: 'groovy-all'
    }
    integTestCompile 'org.apache.commons:commons-lang3:3.4'
    integTestCompile 'org.hamcrest:hamcrest-core:2.2'
}

task integTest(type: Test) {
    testClassesDirs = sourceSets.integTest.output.classesDirs
    classpath = sourceSets.integTest.runtimeClasspath
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1

    // output test failure causes for easier Travis integration
    testLogging {
        events "PASSED", "FAILED"
        exceptionFormat "full"
    }
}

check.dependsOn integTest

apply from: 'gradle/classpathmanifest.gradle'

// Add the classpath file to the test runtime classpath
dependencies {
    testRuntime files(createClasspathManifest)
}

plugins.withType(org.gradle.plugins.ide.idea.IdeaPlugin) { // lazy as plugin not applied yet
    idea {
        module {
            testSourceDirs += sourceSets.integTest.groovy.srcDirs
            testSourceDirs += sourceSets.integTest.resources.srcDirs

            scopes.TEST.plus += [configurations.integTestCompile, configurations.integTestRuntime]
            scopes.TEST.minus += [configurations.compileOnly]
            scopes.PROVIDED.plus += [configurations.compileOnly]
        }
    }
}
